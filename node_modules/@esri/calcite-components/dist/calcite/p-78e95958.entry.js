/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v1.7.0
 */
import{r as t,c as s,h as i,a as e}from"./p-142a242d.js";import{l as a,t as o}from"./p-45d8c8ac.js";import{c as h,d as c,u as n}from"./p-847d1270.js";import{c as r}from"./p-5b034d91.js";import{a as l,s as d,c as p}from"./p-f68ba10d.js";import"./p-382edd21.js";import"./p-e5526dbf.js";import"./p-7c081cef.js";const m=class{constructor(i){t(this,i),this.calciteChipGroupSelect=s(this,"calciteChipGroupSelect",6),this.mutationObserver=r("mutation",(()=>this.updateItems())),this.items=[],this.updateItems=t=>{this.items=(t?t.target:this.slotRefEl)?.assignedElements({flatten:!0}).filter((t=>t?.matches("calcite-chip"))),this.items?.forEach((t=>{t.interactive=!0,t.scale=this.scale,t.selectionMode=this.selectionMode})),this.setSelectedItems(!1)},this.setSelectedItems=(t,s)=>{s&&this.items?.forEach((t=>{const i=s===t;switch(this.selectionMode){case"multiple":i&&(t.selected=!t.selected);break;case"single":t.selected=!!i&&!t.selected;break;case"single-persist":t.selected=!!i}})),this.selectedItems=this.items?.filter((t=>t.selected)),t&&this.calciteChipGroupSelect.emit()},this.disabled=!1,this.label=void 0,this.scale="m",this.selectionMode="none",this.selectedItems=[]}onSelectionModeChange(){this.updateItems()}connectedCallback(){h(this),this.mutationObserver?.observe(this.el,{childList:!0,subtree:!0})}componentDidRender(){c(this),n(this)}componentDidLoad(){l(this)}disconnectedCallback(){this.mutationObserver?.disconnect()}async componentWillLoad(){d(this)}calciteInternalChipKeyEventListener(t){if(t.composedPath().includes(this.el)){const s=this.items?.filter((t=>!t.disabled));switch(t.detail.key){case"ArrowRight":a(s,t.detail.target,"next");break;case"ArrowLeft":a(s,t.detail.target,"previous");break;case"Home":a(s,t.detail.target,"first");break;case"End":a(s,t.detail.target,"last")}}}calciteChipCloseListener(t){const s=t.target;this.items?.includes(s)&&(this.items?.indexOf(s)>0?a(this.items,s,"previous"):0===this.items?.indexOf(s)?a(this.items,s,"next"):a(this.items,s,"first")),this.items=this.items?.filter((t=>t!==s))}calciteChipSelectListener(t){t.composedPath().includes(this.el)&&this.setSelectedItems(!0,t.target)}async setFocus(){if(await p(this),!this.disabled)return(this.selectedItems[0]||this.items[0])?.setFocus()}render(){const t="none"===this.selectionMode||"multiple"===this.selectionMode?"group":"radiogroup";return i("div",{"aria-disabled":o(this.disabled),"aria-label":this.label,class:"container",role:t},i("slot",{onSlotchange:this.updateItems,ref:t=>this.slotRefEl=t}))}get el(){return e(this)}static get watchers(){return{selectionMode:["onSelectionModeChange"]}}};m.style=":host([disabled]){cursor:default;-webkit-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}:host([disabled]) *,:host([disabled]) ::slotted(*){pointer-events:none}:host{display:flex}.container{display:flex;inline-size:100%;flex-wrap:wrap;gap:0.5rem}::slotted(calcite-chip){flex:none}:host([scale=s]) .container{gap:0.25rem}:host([scale=l]) .container{gap:0.75rem}:host([disabled]) ::slotted([calcite-hydrated][disabled]),:host([disabled]) [calcite-hydrated][disabled]{opacity:1}:host([hidden]){display:none}[hidden]{display:none}";export{m as calcite_chip_group}